
// CRUD endpoint deleting one record from your Orders table in your northwind database with OrderID matching argument with logging with authentication and authorisation for guest,root roles publishing northwind.orders.delete socket message when invoked
.arguments
   OrderID:long
.description:CRUD endpoint deleting one record from your Orders table in your northwind database with OrderID matching argument with logging with authentication and authorisation for guest,root roles publishing northwind.orders.delete socket message when invoked
.type:crud-delete

// Verifying user is authorized to access endpoint.
auth.ticket.verify:guest,root

// Logging invocation
auth.ticket.get
lambda2hyper:x:@.arguments/*
log.info:northwind.Orders entry deleted
   username:x:@auth.ticket.get
   arguments:x:@lambda2hyper

// Sanity checking invocation, making sure primary key(s) are specified.
validators.mandatory:x:@.arguments/*/OrderID

// Opening up our database connection.
data.connect:northwind

   // Parametrising our delete invocation.
   add:x:./*/data.delete/*/where/*/and
      get-nodes:x:@.arguments/*

   // Deleting item from database.
   data.delete
      table:Orders
      where
         and

   // Publishing socket message
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   sockets.signal:northwind.orders.delete
      args

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      affected:x:@data.delete
