
// Endpoint counting records from your Products table in your northwind database filtering on ProductID, ProductName, SupplierID, CategoryID, QuantityPerUnit, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel, Discontinued with authentication and authorisation for guest,root roles with reCAPTCHA value of 0.7 with public HTTP caching for 30 seconds
.arguments
   recaptcha:string
   Products.ProductID.eq:long
   Products.ProductName.like:string
   Products.ProductName.eq:string
   Products.SupplierID.eq:long
   Products.CategoryID.eq:long
   Products.QuantityPerUnit.like:string
   Products.QuantityPerUnit.eq:string
   Products.UnitPrice.eq:decimal
   Products.UnitsInStock.eq:long
   Products.UnitsOnOrder.eq:long
   Products.ReorderLevel.eq:long
   Products.Discontinued.like:string
   Products.Discontinued.eq:string
.description:Endpoint counting records from your Products table in your northwind database filtering on ProductID, ProductName, SupplierID, CategoryID, QuantityPerUnit, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel, Discontinued with authentication and authorisation for guest,root roles with reCAPTCHA value of 0.7 with public HTTP caching for 30 seconds
.type:crud-count

// Adding Cache-Control HTTP header
response.headers.set
   Cache-Control:public, max-age=30

// Checking reCAPTCHA value if backend is configured with reCAPTCHA configuration settings.
config.get:"magic:auth:recaptcha:key"
config.get:"magic:auth:recaptcha:secret"
if
   and
      neq:x:@config.get
         .
      neq:x:@config.get
         .:
      neq:x:@config.get/@config.get
         .
      neq:x:@config.get/@config.get
         .:
   .lambda

      // reCAPTCHA configuration settings found.
      validators.mandatory:x:@.arguments/*/recaptcha
      validators.recaptcha:x:@.arguments/*/recaptcha/[0,1]
         site-key:x:@config.get/@config.get
         secret:x:@config.get
         min:decimal:0.7

// To remove reCAPTCHA value preventing it from being used as an argument further down in file.
remove-nodes:x:@.arguments/*/recaptcha/[0,1]

// Verifying user is authorized to access endpoint.
auth.ticket.verify:guest,root

// Opening up our database connection.
data.connect:northwind

   // Parametrising our read invocation.
   add:x:+/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:Products
      columns
         count(*)
            as:count
      where
         and
      limit:long:1

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*/*
