
// CRUD endpoint creating one record in your staff table in your sakila database taking first_name, last_name, address_id, picture, email, store_id, active, username, password, last_update with authentication and authorisation for admin,guest roles with reCAPTCHA value of 0.3
.arguments
   recaptcha:string
   first_name:string
   last_name:string
   address_id:long
   picture:string
   email:string
   store_id:long
   active:long
   password:string
   last_update:date
.description:CRUD endpoint creating one record in your staff table in your sakila database taking first_name, last_name, address_id, picture, email, store_id, active, username, password, last_update with authentication and authorisation for admin,guest roles with reCAPTCHA value of 0.3
.type:crud-create

// Columns with custom handling as we generate a frontend
.handling
   picture:image
   email:email

// Checking reCAPTCHA value if backend is configured with reCAPTCHA configuration settings.
config.get:"magic:auth:recaptcha:key"
config.get:"magic:auth:recaptcha:secret"
if
   and
      neq:x:@config.get
         .
      neq:x:@config.get
         .:
      neq:x:@config.get/@config.get
         .
      neq:x:@config.get/@config.get
         .:
   .lambda

      // reCAPTCHA configuration settings found.
      validators.mandatory:x:@.arguments/*/recaptcha
      validators.recaptcha:x:@.arguments/*/recaptcha/[0,1]
         site-key:x:@config.get/@config.get
         secret:x:@config.get
         min:decimal:0.3

// To remove reCAPTCHA value preventing it from being used as an argument further down in file.
remove-nodes:x:@.arguments/*/recaptcha/[0,1]

// Verifying user is authorized to access endpoint.
auth.ticket.verify:admin,guest

// Making sure we retrieve lock value for column.
auth.ticket.get

// Opening up database connection.
data.connect:sakila

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      table:staff
      return-id:bool:true
      values

         // Table is locked on the following field.
         username:x:@auth.ticket.get

   // Returning the correct status code.
   response.status.set:201

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      id:x:@data.create
