
// CRUD endpoint creating one record in your payments table in your stripe database taking payment, username, amount, currency, payment_method, completed with authentication and authorisation for guest,root roles with reCAPTCHA value of 0.9
.arguments
   recaptcha:string
   payment:string
   amount:long
   currency:string
   payment_method:string
   completed:string
.description:CRUD endpoint creating one record in your payments table in your stripe database taking payment, username, amount, currency, payment_method, completed with authentication and authorisation for guest,root roles with reCAPTCHA value of 0.9
.type:crud-create

// Checking reCAPTCHA value if backend is configured with reCAPTCHA configuration settings.
config.get:"magic:auth:recaptcha:key"
config.get:"magic:auth:recaptcha:secret"
if
   and
      neq:x:@config.get
         .
      neq:x:@config.get
         .:
      neq:x:@config.get/@config.get
         .
      neq:x:@config.get/@config.get
         .:
   .lambda

      // reCAPTCHA configuration settings found.
      validators.mandatory:x:@.arguments/*/recaptcha
      validators.recaptcha:x:@.arguments/*/recaptcha/[0,1]
         site-key:x:@config.get/@config.get
         secret:x:@config.get
         min:decimal:0.9

// To remove reCAPTCHA value preventing it from being used as an argument further down in file.
remove-nodes:x:@.arguments/*/recaptcha/[0,1]

// Verifying user is authorized to access endpoint.
auth.ticket.verify:guest,root
.foreign-keys
   .
      column:username
      table:customers
      foreign_column:username
      foreign_name:username
      long:bool:true
   .
      column:payment_method
      table:payment_methods
      foreign_column:payment_method
      foreign_name:payment_method
      long:bool:true

// Making sure we retrieve lock value for column.
auth.ticket.get

// Opening up database connection.
data.connect:stripe

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      table:payments
      return-id:bool:false
      values

         // Table is locked on the following field.
         username:x:@auth.ticket.get

   // Returning the correct status code.
   response.status.set:201

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      result:success
