
// Endpoint returning items from actor table in sakila database allowing for filtering on first_name and last_name with paging, sorting, and authorisation requirements
.arguments
   limit:long
   offset:long
   order:string
   direction:string
   actor.first_name.like:string
   actor.first_name.eq:string
   actor.last_name.like:string
   actor.last_name.eq:string

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root,admin

// Opening up our database connection.
data.connect:sakila

   // Parametrising our read invocation.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:actor
      columns
         actor.actor_id
         actor.first_name
         actor.last_name
         actor.last_update
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
