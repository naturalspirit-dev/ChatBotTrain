
// Endpoint returning items from customer table in sakila database with filtering on store_id, first_name, last_name, email and address_id to specify items to return with paging and sorting with authentication
.arguments
   limit:long
   offset:long
   order:string
   direction:string
   customer.store_id.eq:long
   customer.first_name.like:string
   customer.first_name.eq:string
   customer.last_name.like:string
   customer.last_name.eq:string
   customer.email.like:string
   customer.email.eq:string
   customer.address_id.eq:long

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root,admin

// Opening up our database connection.
data.connect:sakila

   // Parametrising our read invocation.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:customer
      columns
         customer.customer_id
         customer.store_id
         customer.first_name
         customer.last_name
         customer.email
         customer.address_id
         customer.active
         customer.create_date
         customer.last_update
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
