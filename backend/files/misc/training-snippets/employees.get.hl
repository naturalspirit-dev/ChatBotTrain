
// CRUD endpoint reading records from your Employees table in your northwind database filtering on EmployeeID, LastName, FirstName, Title, TitleOfCourtesy, BirthDate, HireDate, Address, City, Region, PostalCode, Country, HomePhone, Extension, Photo, Notes, ReportsTo, PhotoPath with authentication and authorisation for guest,root,translator roles with reCAPTCHA value of 0.8 with public HTTP caching for 45 seconds
.arguments
   limit:long
   offset:long
   order:string
   direction:string
   recaptcha:string
   Employees.EmployeeID.eq:long
   Employees.LastName.like:string
   Employees.LastName.eq:string
   Employees.FirstName.like:string
   Employees.FirstName.eq:string
   Employees.Title.like:string
   Employees.Title.eq:string
   Employees.TitleOfCourtesy.like:string
   Employees.TitleOfCourtesy.eq:string
   Employees.BirthDate.eq:date
   Employees.HireDate.eq:date
   Employees.Address.like:string
   Employees.Address.eq:string
   Employees.City.like:string
   Employees.City.eq:string
   Employees.Region.like:string
   Employees.Region.eq:string
   Employees.PostalCode.like:string
   Employees.PostalCode.eq:string
   Employees.Country.like:string
   Employees.Country.eq:string
   Employees.HomePhone.like:string
   Employees.HomePhone.eq:string
   Employees.Extension.like:string
   Employees.Extension.eq:string
   Employees.Photo.like:string
   Employees.Photo.eq:string
   Employees.Notes.like:string
   Employees.Notes.eq:string
   Employees.ReportsTo.eq:long
   Employees.PhotoPath.like:string
   Employees.PhotoPath.eq:string
.description:CRUD endpoint reading records from your Employees table in your northwind database filtering on EmployeeID, LastName, FirstName, Title, TitleOfCourtesy, BirthDate, HireDate, Address, City, Region, PostalCode, Country, HomePhone, Extension, Photo, Notes, ReportsTo, PhotoPath with authentication and authorisation for guest,root,translator roles with reCAPTCHA value of 0.8 with public HTTP caching for 45 seconds
.type:crud-read

// Columns with custom handling as we generate a frontend
.handling
   Employees.Photo:image

// Adding Cache-Control HTTP header
response.headers.set
   Cache-Control:public, max-age=45

// Checking reCAPTCHA value if backend is configured with reCAPTCHA configuration settings.
config.get:"magic:auth:recaptcha:key"
config.get:"magic:auth:recaptcha:secret"
if
   and
      neq:x:@config.get
         .
      neq:x:@config.get
         .:
      neq:x:@config.get/@config.get
         .
      neq:x:@config.get/@config.get
         .:
   .lambda

      // reCAPTCHA configuration settings found.
      validators.mandatory:x:@.arguments/*/recaptcha
      validators.recaptcha:x:@.arguments/*/recaptcha/[0,1]
         site-key:x:@config.get/@config.get
         secret:x:@config.get
         min:decimal:0.8

// To remove reCAPTCHA value preventing it from being used as an argument further down in file.
remove-nodes:x:@.arguments/*/recaptcha/[0,1]

// Verifying user is authorized to access endpoint.
auth.ticket.verify:guest,root,translator

// Opening up our database connection.
data.connect:northwind

   // Parametrising our read invocation.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:Employees
      columns
         Employees.EmployeeID
         Employees.LastName
         Employees.FirstName
         Employees.Title
         Employees.TitleOfCourtesy
         Employees.BirthDate
         Employees.HireDate
         Employees.Address
         Employees.City
         Employees.Region
         Employees.PostalCode
         Employees.Country
         Employees.HomePhone
         Employees.Extension
         Employees.Photo
         Employees.Notes
         Employees.ReportsTo
         Employees.PhotoPath
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
