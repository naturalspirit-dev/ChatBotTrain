
// CRUD endpoint reading records from your customers table in your stripe database filtering on username, customer_id with authentication and authorisation for guest,root,translator roles
.arguments
   limit:long
   offset:long
   order:string
   direction:string
   customers.customer_id.like:string
   customers.customer_id.eq:string
.description:CRUD endpoint reading records from your customers table in your stripe database filtering on username, customer_id with authentication and authorisation for guest,root,translator roles
.type:crud-read

// Verifying user is authorized to access endpoint.
auth.ticket.verify:guest,root,translator

// Making sure we retrieve lock value for column.
auth.ticket.get

// Opening up our database connection.
data.connect:stripe

   // Parametrising our read invocation.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:customers
      columns
         customers.customer_id
      where
         and

            // Table is locked on the following field.
            username.eq:x:@auth.ticket.get

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
