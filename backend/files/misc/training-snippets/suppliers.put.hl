
// CRUD endpoint updating one record in your Suppliers table in your northwind database filtering which item to update with SupplierID updating CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax, HomePage fields with logging publishing northwind.suppliers.put socket message when invoked
.arguments
   SupplierID:long
   CompanyName:string
   ContactName:string
   ContactTitle:string
   Address:string
   City:string
   Region:string
   PostalCode:string
   Country:string
   Phone:string
   Fax:string
   HomePage:string
.description:CRUD endpoint updating one record in your Suppliers table in your northwind database filtering which item to update with SupplierID updating CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax, HomePage fields with logging publishing northwind.suppliers.put socket message when invoked
.type:crud-update

// Columns with custom handling as we generate a frontend
.handling
   Phone:phone

// Sanity checking invocation, making sure primary key(s) are specified.
validators.mandatory:x:@.arguments/*/SupplierID

// Logging invocation
auth.ticket.get
lambda2hyper:x:@.arguments/*
log.info:northwind.Suppliers entry updated
   username:x:@auth.ticket.get
   arguments:x:@lambda2hyper

// Opening up our database connection.
data.connect:northwind

   // Parametrising our invocation.
   add:x:./*/data.update/*/values
      get-nodes:x:@.arguments/*/[1,1000]
   add:x:./*/data.update/*/where/*/and
      get-nodes:x:@.arguments/*/[0,1]

   // Invoking our update slot.
   data.update
      table:Suppliers
      values
      where
         and

   // Verifying record exists.
   if
      eq
         get-value:x:@data.update
         .:int:0
      .lambda
         response.status.set:404
         return
            result:Record not found

   // Returning the correct status code.
   response.status.set:202

   // Publishing socket message
   add:x:./*/sockets.signal/*/args
      get-nodes:x:@.arguments/*
   sockets.signal:northwind.suppliers.put
      args

   // Returning success to caller.
   unwrap:x:+/*
   return
      affected:x:@data.update
