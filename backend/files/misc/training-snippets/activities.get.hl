
// CRUD endpoint reading records from your activities table in your aista-crm database filtering on activity_id, created, activity_type, name, description with authentication and authorisation for root,admin roles
.arguments
   limit:long
   offset:long
   order:string
   direction:string
   activities.activity_id.eq:long
   activities.created.eq:date
   activities.activity_type.eq:long
   activities.name.like:string
   activities.name.eq:string
   activities.description.like:string
   activities.description.eq:string
   activity_type.type.eq:string
   activity_type.type.like:string
.description:CRUD endpoint reading records from your activities table in your aista-crm database filtering on activity_id, created, activity_type, name, description with authentication and authorisation for root,admin roles
.type:crud-read

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root,admin

// Opening up our database connection.
data.connect:aista-crm

   // Parametrising our read invocation.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:activities
         join:activity_types
            as:activity_type
            type:left
            on
               and
                  activities.activity_type:activity_type.activity_type_id
      columns
         activities.activity_id
         activities.created
         activities.activity_type
         activities.name
         activities.description
         activity_type.type
            as:activity_type.type
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
