
// CRUD endpoint creating one record in your tickets table in your tickets database taking user, priority, status, department, title, description with authentication and authorisation for guest roles with reCAPTCHA value of 0.9
.arguments
   recaptcha:string
   priority:string
   status:string
   department:string
   title:string
   description:string
.description:CRUD endpoint creating one record in your tickets table in your tickets database taking user, priority, status, department, title, description with authentication and authorisation for guest roles with reCAPTCHA value of 0.9
.type:crud-create

// Checking reCAPTCHA value if backend is configured with reCAPTCHA configuration settings.
config.get:"magic:auth:recaptcha:key"
config.get:"magic:auth:recaptcha:secret"
if
   and
      neq:x:@config.get
         .
      neq:x:@config.get
         .:
      neq:x:@config.get/@config.get
         .
      neq:x:@config.get/@config.get
         .:
   .lambda

      // reCAPTCHA configuration settings found.
      validators.mandatory:x:@.arguments/*/recaptcha
      validators.recaptcha:x:@.arguments/*/recaptcha/[0,1]
         site-key:x:@config.get/@config.get
         secret:x:@config.get
         min:decimal:0.9

// To remove reCAPTCHA value preventing it from being used as an argument further down in file.
remove-nodes:x:@.arguments/*/recaptcha/[0,1]

// Verifying user is authorized to access endpoint.
auth.ticket.verify:guest
.foreign-keys
   .
      column:priority
      table:priorities
      foreign_column:name
      foreign_name:name
      long:bool:true
   .
      column:status
      table:status
      foreign_column:name
      foreign_name:name
      long:bool:true
   .
      column:department
      table:departments
      foreign_column:name
      foreign_name:name
      long:bool:true

// Making sure we retrieve lock value for column.
auth.ticket.get

// Opening up database connection.
data.connect:tickets

   // Parametrising our create invocation.
   add:x:./*/data.create/*/values
      get-nodes:x:@.arguments/*

   // Creating our record.
   data.create
      table:tickets
      return-id:bool:true
      values

         // Table is locked on the following field.
         user:x:@auth.ticket.get

   // Returning the correct status code.
   response.status.set:201

   // Returning result of above invocation to caller.
   unwrap:x:+/*
   return
      id:x:@data.create
