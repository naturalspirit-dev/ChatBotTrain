
// CRUD endpoint reading records from your rental table in your sakila database filtering on rental_id, rental_date, inventory_id, customer_id, return_date, staff_id, last_update with authentication and authorisation for guest,root roles with reCAPTCHA value of 0.3
.arguments
   limit:long
   offset:long
   order:string
   direction:string
   recaptcha:string
   rental.rental_id.eq:long
   rental.rental_date.eq:date
   rental.inventory_id.eq:long
   rental.customer_id.eq:long
   rental.return_date.eq:date
   rental.staff_id.eq:long
   rental.last_update.eq:date
.description:CRUD endpoint reading records from your rental table in your sakila database filtering on rental_id, rental_date, inventory_id, customer_id, return_date, staff_id, last_update with authentication and authorisation for guest,root roles with reCAPTCHA value of 0.3
.type:crud-read

// Checking reCAPTCHA value if backend is configured with reCAPTCHA configuration settings.
config.get:"magic:auth:recaptcha:key"
config.get:"magic:auth:recaptcha:secret"
if
   and
      neq:x:@config.get
         .
      neq:x:@config.get
         .:
      neq:x:@config.get/@config.get
         .
      neq:x:@config.get/@config.get
         .:
   .lambda

      // reCAPTCHA configuration settings found.
      validators.mandatory:x:@.arguments/*/recaptcha
      validators.recaptcha:x:@.arguments/*/recaptcha/[0,1]
         site-key:x:@config.get/@config.get
         secret:x:@config.get
         min:decimal:0.3

// To remove reCAPTCHA value preventing it from being used as an argument further down in file.
remove-nodes:x:@.arguments/*/recaptcha/[0,1]

// Verifying user is authorized to access endpoint.
auth.ticket.verify:guest,root

// Opening up our database connection.
data.connect:sakila

   // Parametrising our read invocation.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:rental
      columns
         rental.rental_id
         rental.rental_date
         rental.inventory_id
         rental.customer_id
         rental.return_date
         rental.staff_id
         rental.last_update
      where
         and

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
