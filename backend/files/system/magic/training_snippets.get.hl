
// CRUD read endpoint with paging, sorting, filtering selecting records from your training_snippets table in your magic database returning id, created, type, pushed, uri, prompt, completion filtering on id, created, type, pushed, uri, prompt, completion with authentication and authorisation for root,admin roles
.arguments
   limit:long
   offset:long
   order:string
   direction:string
   training_snippets.id.eq:long
   training_snippets.type.like:string
   training_snippets.type.eq:string
   training_snippets.pushed.eq:long
   training_snippets.uri.like:string
   training_snippets.uri.eq:string
   training_snippets.prompt.like:string
   training_snippets.prompt.eq:string
   training_snippets.completion.like:string
   training_snippets.completion.eq:string
.description:CRUD read endpoint with paging, sorting, filtering selecting records from your training_snippets table in your magic database returning id, created, type, pushed, uri, prompt, completion filtering on id, created, type, pushed, uri, prompt, completion with authentication and authorisation for root,admin roles
.type:crud-read

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root

// Opening up our database connection.
data.connect:[generic|magic]

   // Parametrising our read invocation with ordering arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/order
      get-nodes:x:@.arguments/*/direction
   remove-nodes:x:@.arguments/*/order
   remove-nodes:x:@.arguments/*/direction

   // Parametrising our read invocation with paging arguments if specified.
   add:x:./*/data.read
      get-nodes:x:@.arguments/*/limit
      get-nodes:x:@.arguments/*/offset
   remove-nodes:x:@.arguments/*/limit
   remove-nodes:x:@.arguments/*/offset

   // Parametrising our read invocation with filtering arguments.
   add:x:./*/data.read/*/where/*
      get-nodes:x:@.arguments/*

   // Reading data from database.
   data.read
      table:training_snippets
      columns
         training_snippets.id
         training_snippets.created
         training_snippets.type
         training_snippets.pushed
         training_snippets.uri
         training_snippets.prompt
         training_snippets.completion
      where
         or

   // Returning result of above read invocation to caller.
   return-nodes:x:@data.read/*
