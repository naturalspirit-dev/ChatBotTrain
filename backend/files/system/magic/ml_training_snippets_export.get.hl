
// Returns all filtered training snippets as a CSV file.
.arguments
   ml_training_snippets.prompt.like:string
   ml_training_snippets.type.eq:string
.description:Returns all filtered training snippets as a CSV file
.type:internal

// Verifying user is authorized to access endpoint.
auth.ticket.verify:root

// Opening up our database connection.
data.connect:[generic|magic]

   // Parametrising our invocation.
   add:x:./*/data.read/*/where/*/and
      get-nodes:x:@.arguments/*

   // Invoking our read slot.
   data.read
      table:ml_training_snippets
      columns
         type
         uri
         prompt
         completion
      where
         and
      limit:-1

   // Verifying records exists.
   if
      not-exists:x:@data.read/*
      .lambda
         response.status.set:404
         return
            result:No records found

   // Converting result to CSV.
   lambda2csv:x:@data.read/*

   // Applying correct HTTP header.
   response.headers.set
      Content-Type:text/csv
      Access-Control-Expose-Headers:Content-Disposition
      Content-Disposition:"attachment; filename=\"training-snippets.csv\""

   // Returning content to caller.
   return:x:@lambda2csv
