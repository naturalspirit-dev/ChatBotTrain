
/*
 * Runs through all training data for OpenAI and inserts into magic database.
 * 
 * Notice, to make sure we don't do this until after the migration script has
 * been executed, we do it on a separate thread, waiting 30 seconds before
 * start our insert job.
 */
fork

   try

      // Making sure we don't continue before migration scripts for Magic database are done executing.
      sleep:30000
      
      // Connecting to Magic database.
      data.connect:magic
      
         // Checking that we haven't already inserted training snippets previously.
         data.read
            table:openai_training_snippets
            columns
               count(*)
         if
            eq
               get-value:x:@data.read/*/0
               .:long:0
            .lambda

               /*
                * No training snippets found, hence inserting into database.
                *
                * Listing all files from /misc/training-snippets/ folder recursively first.
                */
               io.file.list-recursively:/misc/training-snippets/

               // Looping through each file returned from above invocation, loading it, and inserting into database.
               for-each:x:@io.file.list-recursively/*
               
                  if
                     strings.ends-with:x:@.dp/#
                        .:.hl
                     .lambda

                        // Loading currrently iterated file.
                        io.file.load:x:@.dp/#

                        // Converting to lambda such that we can extract initial comment and use as prompt.
                        hyper2lambda:x:@io.file.load
                           comments:true

                        // Used as buffers for prompt or description.
                        .description
                        set-value:x:@.description
                           get-value:x:@hyper2lambda/0

                        // Removing prompt parts and converting the rest of the file back to Hyperlambda again.
                        remove-nodes:x:@hyper2lambda/0
                        lambda2hyper:x:@hyper2lambda/*

                        // Used as buffer for content.
                        .content
                        set-value:x:@.content
                           get-value:x:@lambda2hyper

                        // Inserting record into database.
                        data.create
                           table:openai_training_snippets
                           values
                              content:x:@.content
                              description:x:@.description
                              filename:x:@.dp/#

               // Creating a log entry.
               get-count:x:@io.file.list-recursively/*
               log.info:OpenAI Hyperlambda snippets successfully inserted into Magic database
                  count:x:@get-count

   .catch
      log.error:Something went wrong as we tried to insert OpenAI training database into magic database
         message:x:@.arguments/*/message
