
// Returns all assumptions in system for specified endpoint.
.arguments
   endpoint:string
   verb:string
.description:Returns all assumptions in the system for the specified endpoint/verb combination
.type:internal

// Ensures user is authorized to access endpoint.
auth.ticket.verify:root

// Listing all files in assumption test folder(s).
io.file.load-recursively:/misc/tests/
io.file.load-recursively:/etc/tests/

/*
 * Iterates through result from above invocation and returns only resulting files
 * that are for specified endpoint.
 */
for-each:x:../*/io.file.load-recursively/*

   // Verifying currently iterated file is a Hyperlambda file.
   if
      strings.ends-with:x:@.dp/#/*/name
         .:.hl
      .lambda

         // File is Hyperlambda, loading it and checking if URL and verb is a match.
         hyper2lambda:x:@.dp/#/*/content

         /*
          * Verifying this is an automatically generated assumption, before checking
          * if it matches specified endpoint.
          */
         if
            exists:x:@hyper2lambda/*/url
            .lambda

               // Automatically generated assumption, checking if it's for currently requested endpoint.
               strings.split:x:@hyper2lambda/*/url
                  .:?
               if
                  and
                     eq
                        get-value:x:@strings.split/0
                        get-value:x:@.arguments/*/endpoint
                     eq
                        get-value:x:@hyper2lambda/*/verb
                        get-value:x:@.arguments/*/verb
                  .lambda
                     add:x:../*/return-nodes
                        get-nodes:x:@.dp/#/*/name

// Returns result to caller.
set-name:x:../*/return-nodes/*
   .:.
return-nodes
