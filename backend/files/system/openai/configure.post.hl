
/*
 * Configures OpenAI using its default training data,
 * and the specified API key.
 */
.arguments
   model:string
   max_tokens:int
   temperature:decimal

// Making sure user has access to invoked endpoint.
auth.ticket.verify:root

// Sanity checking invocation
validators.mandatory:x:@.arguments/*/temperature
validators.mandatory:x:@.arguments/*/max_tokens
validators.mandatory:x:@.arguments/*/model
validators.integer:x:@.arguments/*/max_tokens
   min:10
   max:4096

// Loading configuration.
config.load
json2lambda:x:@config.load

// Removing existing configuration, if existing.
remove-nodes:x:@json2lambda/*/magic/*/openai/*/model
remove-nodes:x:@json2lambda/*/magic/*/openai/*/max_tokens
remove-nodes:x:@json2lambda/*/magic/*/openai/*/temperature

// Adding arguments to configuration.
unwrap:x:+/*/*/*
add:x:@json2lambda/*/magic
   .
      openai
         model:x:@.arguments/*/model
         max_tokens:x:@.arguments/*/max_tokens
         temperature:x:@.arguments/*/temperature

// Transforming to JSON and saving configuration.
lambda2json:x:@json2lambda/*
config.save:x:@lambda2json

// Returning success to caller.
return
   result:success
