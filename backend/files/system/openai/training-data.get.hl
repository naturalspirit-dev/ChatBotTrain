
/*
 * Returns OpenAI training data to caller.
 */
.arguments
.description:Returns OpenAI training data to caller

// Making sure user has access to invoked endpoint.
auth.ticket.verify:root

// Listing all files in snippets folder.
io.file.list:/etc/snippets/

// Loading all files, and creating structured data to caller.
for-each:x:@io.file.list/*

   if
      strings.ends-with:x:@.dp/#
         .:.hl
      .lambda

         /*
          * Loads file and creates training material from it,
          * assuming the first node is a comment node being the prompt,
          * and the rest of the file the completion.
          */
         io.file.load:x:@.dp/#
         hyper2lambda:x:@io.file.load
            comments:true
         .prompt
         set-value:x:@.prompt
            get-value:x:@hyper2lambda/0
         remove-nodes:x:@hyper2lambda/**/\..
         lambda2hyper:x:@hyper2lambda/*
         unwrap:x:+/*/*/*
         add:x:../*/return
            .
               .
                  prompt:x:@.prompt
                  completion:x:@lambda2hyper
   else-if
      strings.ends-with:x:@.dp/#
         .:.md
      .lambda

         /*
          * Loads file and creates training material from it,
          * assuming the first line in the file is the prompt,
          * and the rest of the file is the completion.
          */
         io.file.load:x:@.dp/#
         .prompt
         strings.split:x:@io.file.load
            .:"\r\n"
         set-value:x:@.prompt
            get-value:x:@strings.split/0
         remove-nodes:x:@strings.split/0
         .completion
         set-value:x:@.completion
            strings.join:x:@strings.split/*
               .:"\r\n"
         unwrap:x:+/*/*/*
         add:x:../*/return
            .
               .
                  prompt:x:@.prompt
                  completion:x:@.completion

// Returning result to caller.
return
