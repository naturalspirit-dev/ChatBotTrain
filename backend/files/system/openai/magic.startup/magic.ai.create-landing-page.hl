
/*
 * Chat slot for having conversations with OpenAI's "gpt" type of models.
 */
slots.create:magic.ai.create-landing-page

   // Sanity checking invocation.
   validators.mandatory:x:@.arguments/*/url
   validators.mandatory:x:@.arguments/*/type

   // Signaling frontend.
   strings.concat
      .:"Creating default landing page for "
      get-value:x:@.arguments/*/type
      .:" by copying "
      get-value:x:@.arguments/*/url
   log.info:Creating default landing page for type
      type:x:@.arguments/*/type
      url:x:@.arguments/*/url
   unwrap:x:+/*/args/**
   sockets.signal:magic.backend.chatbot
      roles:root
      args
         message:x:@strings.concat
         type:info

   // Retrieving HTML document from URL specified.
   http.get:x:@.arguments/*/url
      headers
         User-Agent:AINIRO-MachineLearning-Spider

   // Converting to lambda to verify we've got a "base" element.
   html2lambda:x:@http.get/*/content

   // Checking if document has a "base" element.
   if
      not
         exists:x:@html2lambda/*/html/*/head/*/base
      .lambda

         // Adding base.
         unwrap:x:+/*/*/*
         add:x:@html2lambda/*/html/*/head
            .
               base
                  @href:x:@.arguments/*/url

   // Moving base to the top of "head" section.
   insert-before:x:@html2lambda/*/html/*/head/0
      get-nodes:x:@html2lambda/*/html/*/head/*/base
   remove-nodes:x:@html2lambda/*/html/*/head/*/base/[1,2]

   // Adding chatbot embed script to page.
   .scheme:"https://"
   if
      strings.contains:x:@.arguments/*/host
         .:localhost
      .lambda
         set-value:x:@.scheme
            .:"http://"
   .chatbot
   set-value:x:@.chatbot
      strings.concat
         get-value:x:@.scheme
         get-value:x:@.arguments/*/host
         .:"/magic/system/openai/include-javascript?markdown=false&speech=false&search=false&chat=true&css=scandinavian-navy&file=default&type="
         get-value:x:@.arguments/*/type
         .:"&header=Ask%20about%20our%20services%20and%20products&button="
   .search
   set-value:x:@.search
      strings.concat
         get-value:x:@.scheme
         get-value:x:@.arguments/*/host
         .:"/magic/system/openai/include-search?css=default&type="
         get-value:x:@.arguments/*/type
         .:"&placeholder=Search%20this%20site%20...&button=&max=10"
   unwrap:x:+/*/*/*/\@src
   add:x:@html2lambda/*/html/*/body
      .
         script
            @src:x:@.chatbot
            @defer
         script
            @src:x:@.search
            @defer

   // Converting to HTML and saving to "/etc/www/" folder.
   lambda2html:x:@html2lambda/*
   strings.concat
      .:/etc/www/
      get-value:x:@.arguments/*/type
      .:.html
   io.file.save:x:@strings.concat
      get-value:x:@lambda2html
