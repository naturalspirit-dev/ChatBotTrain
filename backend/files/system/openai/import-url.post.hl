
/*
 * Imports the specified URL as training data by scraping the URL,
 * including all internal hyperlinks, and generate training data
 * from content found.
 */
.arguments
   url:string
   type:string

// Ensures user is authorized to access endpoint.
auth.ticket.verify:root

// Sanity checking invocation.
validators.mandatory:x:@.arguments/*/url
validators.url:x:@.arguments/*/url
validators.mandatory:x:@.arguments/*/type

// Doing some basic logging.
log.info:Crawling URL generating OpenAI training snippets
   url:x:@.arguments/*/url
   type:x:@.arguments/*/type

// Creating a thread and invoking file doing the heavy lifting.
insert-before:x:./*/fork/0
   get-nodes:x:@.arguments
fork

   // Making sure exceptions does not leave thread.
   try

      // Executing file doing the heavy lifting.
      add:x:./*/io.file.execute
         get-nodes:x:@.arguments/*
      io.file.execute:/system/openai/crawl.implementation/import-url.hl
         done

      // Making sure we notify client that we're done
      sockets.signal:magic.backend.message
         roles:root
         args
            message:Done creating OpenAI training data from URL
            type:success

      // Basic logging.
      log.info:Generated OpenAI training data succeeded
         url:x:@.arguments/*/url
         type:x:@.arguments/*/type

   .catch

      // Oops ...!!
      log.error:x:@.arguments/*/message

// Returning success to caller.
return
   result:success
