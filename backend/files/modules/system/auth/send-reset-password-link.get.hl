
/*
 * Sends a reset password email to user.
 *
 * Notice, assumes username is a valid email address.
 *
 * The [frontendUrl] is the frontend root URL you want to prepend the
 * password link with.
 *
 * The [backendUrl] is the backend root URL you want to associate the
 * generated password link with.
 *
 * This endpoint also assumes that some sort of SMTP server have
 * been configured in the site's configuration parts.
 */
.arguments
   username:string
   frontendUrl:string
   backendUrl:string
.description:Sends a reset password email to the specified user


/*
 * Sanity checking invocation.
 */
validators.mandatory:x:@.arguments/*/username
validators.mandatory:x:@.arguments/*/frontendUrl
validators.mandatory:x:@.arguments/*/backendUrl
validators.email:x:@.arguments/*/username
validators.url:x:@.arguments/*/frontendUrl
validators.url:x:@.arguments/*/backendUrl


/*
 * Invokes [magic.auth.authenticate] that does the heavy lifting,
 * and creates our JWT token that we send to the user as an email.
 */
unwrap:x:+/*
signal:magic.auth.authenticate
   username:x:@.arguments/*/username
   check-password:bool:false
   reset-password:bool:true


/*
 * Loading up email template, which is modified and parametrized
 * according to input arguments.
 */
io.file.load:/modules/system/auth/templates/reset-password.html


/*
 * Dynamically building our reset password URL.
 */
.url
set-value:x:@.url
   strings.concat
      get-value:x:@.arguments/*/frontendUrl
      .:?token=
      get-value:x:@signal/*/ticket
      .:&username=
      strings.url-encode:x:@.arguments/*/username
      .:&url=
      strings.url-encode:x:@.arguments/*/backendUrl


/*
 * Performing substitution in email template.
 */
.body
set-value:x:@.body
   strings.replace:x:@io.file.load
      .:{{url}}
      get-value:x:@.url


/*
 * Sends an email to the user using the SMTP settings from our configuration.
 */
unwrap:x:+/**
mail.smtp.send
   message
      to
         .:x:@.arguments/*/username
      subject:Change password request
      entity:text/html
         content:x:@.body


/*
 * Logging the fact the we just sent a reset password email to the user.
 */
log.info
   .:"Reset password email sent to '"
   get-value:x:@.arguments/*/username
   .:"'"


/*
 * Returns success to caller.
 */
return-nodes
   result:success
