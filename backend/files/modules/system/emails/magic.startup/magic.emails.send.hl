
/*
 * Attempts to send a braided email, substituting template values found in the 
 * specified emplate email file from the given collection of [substitutes].
 *
 * Notice, will not do anything unless SMTP configuration settings can be found
 * in your appSettings.json file.
 *
 * Arguments;
 *
 * - [subject] - Subject line for email.
 * - [template-file] - Template file that contains the email that is to be sent
 * - [substitutes] - Key value collection of substitutions to perform in template file. E.g. {{foo}} in template file will be replaced by the value of [substitutes]/[foo]'s value.
 * - [mime-type] - MIME type email will be sent as, e.g. "text/plain" or "text/html".
 * - [email] - To email address of where to send email.
 * - [name] - Name of recipient of email.
 *
 * Notice, the from email/name will be fetched from your appSettings.json file. And the same with the SMTP server configuration settings.
 */
slots.create:magic.emails.send


   /*
    * Sanity checking invocation.
    */
   validators.mandatory:x:@.arguments/*/subject
   validators.mandatory:x:@.arguments/*/email
   validators.mandatory:x:@.arguments/*/name
   validators.mandatory:x:@.arguments/*/template-file
   validators.mandatory:x:@.arguments/*/mime-type
   validators.enum:x:@.arguments/*/mime-type
      .:text/plain
      .:text/html


   /*
    * Verifying there exists valid SMTP configuration settings.
    */
   config.get:"magic:smtp:host"
   if
      eq
         get-value:x:@config.get
         .
      .lambda


         /*
          * Oops, no SMTP settings found, logging that fact, and returning early.
          */
         log.error:"Tried to send an email but couldn't since there is no SMTP server configured in your appSettings.json file"
         return-value:bool:false


   /*
    * Verifying template file specified by caller exists.
    */
   if
      not
         io.file.exists:x:@.arguments/*/template-file
      .lambda


         /*
          * Template file doesn't exists, logging that fact, and returning early.
          */
         log.error
            .:"Tried to send an email but couldn't since the specified template file '"
            get-value:x:@.arguments/*/template-file
            .:"' doesn't exist"
         return-value:bool:false


   /*
    * Loading template file and performing substitutions.
    */
   .body
   set-value:x:@.body
      io.file.load:x:@.arguments/*/template-file
   for-each:x:@.arguments/*/substitutes/*
      set-value:x:@.body
         strings.replace:x:@.body
            strings.concat
               .:"{{"
               get-name:x:@.dp/#
               .:"}}"
            get-value:x:@.dp/#


   /*
    * Making sure we log our attempt of sending the email, with all arguments supplied.
    *
    * In case of failures, this allows us to later "replay" the send email invocation if necessary.
    */
   log.info
      .:"Attempting to send email\r\n\r\n"
      .:"To: "
      get-value:x:@.arguments/*/email
      .:"\r\n"
      .:"Name: "
      get-value:x:@.arguments/*/name
      .:"\r\n"
      .:"Subject: "
      get-value:x:@.arguments/*/subject
      .:"\r\n\r\n"
      get-value:x:@.body


   /*
    * Sending email.
    */
   set-name:x:./*/mail.smtp.send/*/message/*/to/0
      get-value:x:@.arguments/*/name
   unwrap:x:+/**
   mail.smtp.send
      message
         to
            .:x:@.arguments/*/email
         subject:x:@.arguments/*/subject
         entity:x:@.arguments/*/mime-type
            content:x:@.body
   log.info
      .:"Email successfully sent to '"
      get-value:x:@.arguments/*/email
      .:"' from template file of '"
      get-value:x:@.arguments/*/template-file
      .:"'"


   /*
    * Returning success to caller.
    */
   return-value:bool:true
