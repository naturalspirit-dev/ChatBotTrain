
/*
 * Creates a user and inserts into the "magic_auth" database,
 * with the username/password specified in the [.parameters] collection,
 * and belonging to the specified [roles] from the [.parameters] collection.
 *
 * Password is cryptographically hashed using the blow fish hashing algorithm,
 * and cryptographically and securely stored with a user provided salt in the
 * "users" table.
 */
.arguments


/*
 * Hashing password.
 */
crypto.password.hash:x:@.arguments/*/password


/*
 * Opening up a database connection to `magic_auth`.
 */
mssql.connect:[magic_auth]


   /*
    * Inserting user.
    */
   mssql.scalar:insert into users (username, password) values (@username, @password); select scope_identity();
      @username:x:@.arguments/*/username
      @password:x:@crypto.password.hash


   /*
    * Inserting all roles.
    */
   for-each:x:@.arguments/*/roles/*


      /*
       * First figuring out id of currently inserted role.
       */
      mssql.scalar:select id from roles where name = @name
         @name:x:@.dp/#


      /*
       * Then inserting into roles_users an association between user and role.
       */
      mssql.execute:insert into roles_users (role_id, user_id) values (@role_id, @user_id)
         @role_id:x:@mssql.scalar
         @user_id:x:@for-each/@mssql.scalar
