

/*
 * Creates the [magic.mysql.read] slot.
 */
slot:magic.mysql.read
   .arguments
      connection:string
      table:string
      query
         limit:int
         offset:int
   .lambda

      .limit:int:10
      .offset:int:0

      if
         mt
            get-count:x:@.arguments/*/query/*/limit
            .:int:0

         .lambda
            set-value:x:@.limit
               get-value:x:@.arguments/*/query/*/limit
            remove-node:x:@.arguments/*/query/*/limit

      if
         mt
            get-count:x:@.arguments/*/query/*/offset
            .:int:0

         .lambda
            set-value:x:@.offset
               get-value:x:@.arguments/*/query/*/offset
            remove-node:x:@.arguments/*/query/*/offset


      set-value:x:./*/mysql.connect
         get-value:x:@.arguments/*/connection

      .query:"select * from "
      set-value:x:@.query
         concat
            get-value:x:@.query
            get-value:x:@.arguments/*/table

      if
         mt
            get-count:x:@.arguments/*/query/*
            .:int:0
         .lambda

            set-value:x:@.query
               concat
                  get-value:x:@.query
                  .query:" where":
            .idx:int:0

            for-each:x:@.arguments/*/query/*
               if
                  not
                     eq
                        get-value:x:@.idx
                        .:int:0
                  .lambda

                     set-value:x:@.query
                        concat
                           get-value:x:@.query
                           .:" and"

               set-value:x:@.query
                  concat
                     get-value:x:@.query
                     .:" "
                     get-name:x:@.dp/#
                     .:" = @"
                     get-value:x:@.idx

               set-name:x:+/+/*/*
                  concat
                     .:"@"
                     get-value:x:@.idx

               set-value:x:+/*/*
                  get-value:x:@.dp/#
               add:x:@.query
                  .
                     foo:bar
               set-value:x:@.idx
                  +
                     get-value:x:@.idx
                     .:int:1

      set-value:x:@.query
         concat
            get-value:x:@.query
            .:" limit "
            get-value:x:@.limit

      set-value:x:@.query
         concat
            get-value:x:@.query
            .:" offset "
            get-value:x:@.offset

      mysql.connect
         add:x:+
            get-nodes:x:@.query/*
         mysql.select:x:@.query
         return-nodes:x:-/*
