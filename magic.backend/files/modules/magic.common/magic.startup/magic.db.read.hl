
/*
 * Read items from your [connection]/[table] according to [values] supplied.
 */
slot:magic.db.read
   .lambda


      /*
       * Opening up a connection.
       */
      mysql.connect:x:@.arguments/*/connection


         /*
          * Parametrizing invocation to [mysql.read], first with generic arguments, 
          * such as [limit], [offset], [order] and [direction].
          * Making sure we remove the nodes from the [.arguments] collection afterwards,
          * such that we don't add them into our [where].
          */
         add:x:./*/mysql.read
            get-nodes:x:@.arguments/*/args/*limit
         remove-node:x:@.arguments/*/args/*limit

         add:x:./*/mysql.read
            get-nodes:x:@.arguments/*/args/*offset
         remove-node:x:@.arguments/*/args/*offset

         add:x:./*/mysql.read
            get-nodes:x:@.arguments/*/args/*order
         remove-node:x:@.arguments/*/args/*order

         add:x:./*/mysql.read
            get-nodes:x:@.arguments/*/args/*direction
         remove-node:x:@.arguments/*/args/*direction


         /*
          * Then any remaining arguments.
          */
         if
            mt
               get-count:x:@.arguments/*/args/*
               .:int:0
            .lambda


               /*
                * Adding [where] to [mysql.read].
                */
               add:x:../*/mysql.connect/*/mysql.read
                  .
                     where
                        and
               add:x:../*/mysql.connect/*/mysql.read/*/where/*/and
                  get-nodes:x:@.arguments/*/args/*


         /*
          * Invoking [mysql.read].
          */
         mysql.read
            connection:x:@.arguments/*/connection
            table:x:@.arguments/*/table


         /*
          * Returning results to caller.
          */
         return-nodes:x:@mysql.read/*
