
/*
 * Sets up authentication of system according to the arguments provided.
 */
.arguments
   databaseType:string
   rootUsername:string
   rootPassword:string
.description:"Sets up authentication of system according to the arguments provided."


/*
 * Ensures user is authorized to access endpoint.
 */
auth.ticket.verify:root


strings.concat
   .:"Trying to setup up Magic with '"
   get-value:x:@.arguments/*/databaseType
   .:"' as authentication database type"
log.info:x:@strings.concat


/*
 * Verifying that system haven't already been setup with some secure
 * authentication scheme previously.
 */
log.info:Checking if system has already been setup previously
slots.get:magic.authenticate
if
   or
      not
         exists:x:@slots.get/*/.is-default-auth
      not
         eq
            get-value:x:@slots.get/*/.is-default-auth
            .:bool:true
   .lambda
      log.info:System has apparently already been setup previously
      throw:Your system has already been configured to use a secure authentication scheme
log.info:Magic has not been previously setup


/*
 * Checking if database already exists, and if not, creating it.
 */
log.info:Checking if database exists from before
.database-exists:bool:true
strings.concat
   .:magic.db.
   get-value:x:@.arguments/*/databaseType
   .:.databases
slots.signal:x:-
if
   not
      exists:x:@slots.signal/*/*/=magic_auth
   .lambda


      /*
       * Making sure we inform outer layer that we are creating a new user.
       */
      log.info:Database does not exist from before, hence we will try to create it
      set-value:x:@.database-exists
         .:bool:false


      /*
       * Database does not exist.
       *
       * Evaluating SQL script that creates our database, but first we must dynamically
       * determine which script to execute.
       */
      strings.concat
         .:/misc/
         get-value:x:@.arguments/*/databaseType
         .:/magic_auth.sql


      /*
       * Loading create database SQL script file, and replacing execution slots according
       * to which database type we're dealing with.
       */
      strings.concat
         .:"Loading database script '"
         get-value:x:./@strings.concat
         .:"' and attempting to execute it, to create our 'magic_auth' database schema"
      log.info:x:@strings.concat
      .slot
      io.files.load:x:@strings.concat/@strings.concat
      if
         eq
            get-value:x:@.arguments/*/databaseType
            .:mssql
         .lambda
            log.info:Executing Microsoft SQL Server batch script to create our authentication database
            set-value:x:@.slot
               .:mssql.execute-batch
      else
         log.info:Executing SQL script to create database
         set-value:x:@.slot
            strings.concat
               get-value:x:@.arguments/*/databaseType
               .:.execute
      set-name:x:../**/xxx.connect
         strings.concat
            get-value:x:@.arguments/*/databaseType
            .:.connect
      set-name:x:../**/xxx.execute
         get-value:x:@.slot


      /*
       * Executing create database SQL script.
       */
      xxx.connect
         xxx.execute:x:@io.files.load
      log.info:Database was successfully created


      /*
       * Inserting the root user according to arguments given.
       */
      log.info:Creating our default root user in database
      strings.concat
         .:/misc/
         get-value:x:@.arguments/*/databaseType
         .:/create-user.hl
      io.files.load:x:@strings.concat
      hyper2lambda:x:-
      unwrap:x:+/*/*
      add:x:@hyper2lambda/*/.arguments
         .
            username:x:@.arguments/*/rootUsername
            password:x:@.arguments/*/rootPassword
            roles
               .:root
      eval:x:@hyper2lambda
      log.info:Root user was successfully created in database


else
   log.info:"'magic_auth' database already exists from before"


/*
 * Now we have our auth database, and our initial root user, and we can start moving files around,
 * and modifying slots accordingly.
 */
log.info:"Creating backup of default authentication Hyperlambda file, which can be found in '/trash/magic.authenticate.hl' afterwards"
io.files.move:/modules/system/magic.startup/magic.authenticate.hl
   .:/trash/
strings.concat
   .:/misc/
   get-value:x:@.arguments/*/databaseType
   .:/magic.authenticate.hl
log.info:"Copying database specific 'magic.authenticate.hl' file to '/modules/system.magic.startup/' folder."
io.files.copy:x:@strings.concat
   .:/modules/system/magic.startup/


/*
 * Copying the database specific "change-password" file.
 */
log.info:"Copying database specific 'change-password.hl' file to '/modules/system.magic.startup/' folder"
strings.concat
   .:/misc/
   get-value:x:@.arguments/*/databaseType
   .:/magic.change-password.hl
io.files.copy:x:-
   .:/modules/system/magic.startup/


/*
 * Evaluating new authentication file, to update our slot.
 */
log.info:"Evaluating new database specific 'magic.authenticate.hl' file, to overwrite our old [magic.authenticate] slot"
io.files.load:/modules/system/magic.startup/magic.authenticate.hl
hyper2lambda:x:-
eval:x:@hyper2lambda


/*
 * Evaluating "change-password" file, to create our slot.
 */
log.info:"Evaluating new database specific 'magic.change-password.hl' file, to overwrite our old [magic.change-password] slot"
io.files.load:/modules/system/magic.startup/magic.change-password.hl
hyper2lambda:x:-
eval:x:@hyper2lambda


/*
 * Returning early, since database already exists,
 * and logging in probably won't work.
 */
log.info:System was successfully setup, returning success to caller
slots.return-value:Success
