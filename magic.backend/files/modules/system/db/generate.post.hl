
/*
 * Generate an HTTP REST endpoint according to the given
 * [.arguments].
 */
.arguments
   database:string
   table:string
   template:string
   verb:string
   templateArgs


/*
 * Ensures user is authorized to access endpoint.
 */
auth.verify-ticket:root


/*
 * Making sure we transform template arguments to something we can understand.
 */
for-each:x:@.arguments/*/templateArgs/*
   switch:x:@.dp/#


      /*
       * Everything transformed into integers.
       */
      case:int(11)
      case:int(10) unsigned
         set-value:x:@.dp/#
            .:int


/*
 * Creating our endpoint according to arguments given, by using [apply-file]
 * on the [template] file given.
 */
add:x:./*/apply-file/*/args
   get-nodes:x:@.arguments/*/templateArgs/*
unwrap:x:./*/apply-file/*
apply-file:x:@.arguments/*/template
   args
   database:x:@.arguments/*/database
   table:x:@.arguments/*/table


/*
 * Then creating our folder.
 */
.folder:/modules/
set-value:x:@.folder
   concat
      get-value:x:@.folder
      get-value:x:@.arguments/*/database
      .:/
create-folder:x:@.folder


/*
 * Transforming lambda to hyper, and saving it to the correct file.
 */
hyper:x:@apply-file/*
unwrap:x:+
.filename:x:@.folder
set-value:x:@.filename
   concat
      get-value:x:@.filename
      get-value:x:@.arguments/*/table
      .:.
      get-value:x:@.arguments/*/verb
      .:.hl
save-file:x:@.filename
   get-value:x:@hyper


/*
 * Returning success to caller.
 */
return-nodes
   result:success
