
/*
 * Evaluates the given [sql] and returns results to caller.
 */
.arguments
   databaseType:string
   database:string
   sql:string
   batch:bool
.description:"Evaluates the given SQL given for your specified databaseType, and returns the result to caller."


/*
 * Ensures user is authorized to access endpoint.
 */
auth.ticket.verify:root


/*
 * Connecting to default database.
 */
set-name:x:./*/foo.connect
   strings.concat
      get-value:x:@.arguments/*/databaseType
      .:.connect
foo.connect


   /*
    * Checking if database type is "mssql" and [batch] is true, at which point
    * we execute the script as a "batch" type of script (allowing for "GO" statements).
    */
   if
      and
         eq
            get-value:x:@.arguments/*/batch
            .:bool:true
         eq
            get-value:x:@.arguments/*/databaseType
            .:mssql
      .lambda
         mssql.execute-batch:x:@.arguments/*/sql
         slots.return-nodes:x:-/*

   else


      /*
       * Executing SQL, making sure we get slot name correct.
       */
      set-name:x:./*/foo.select
         strings.concat
            get-value:x:@.arguments/*/databaseType
            .:.select


      /*
       * Creating our SQL, which depends upon whether or not an
       * explicit database was selected or not.
       */
      .sql
      if
         and
            not
               eq
                  get-value:x:@.arguments/*/database
                  .:
            not
               eq
                  get-value:x:@.arguments/*/database
                  .
         .lambda


            /*
             * Explicit database was given.
             */
            set-value:x:@.sql
               strings.concat
                  .:"use \""
                  get-value:x:@.arguments/*/database
                  .:"\";"
                  get-value:x:@.arguments/*/sql
      else


         /*
          * No database was given, hopefully it's in the actual SQL command.
          */
         set-value:x:@.sql
            get-value:x:@.arguments/*/sql


      /*
       * Executing SQL and returning results to caller.
       */
      foo.select:x:@.sql
      slots.return-nodes:x:-/*
