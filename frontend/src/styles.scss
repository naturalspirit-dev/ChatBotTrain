/* You can add global styles to this file, and also import other style files */


@import '~codemirror/lib/codemirror';
@import "~codemirror/addon/display/fullscreen";
@import './assets/styles/sizes.scss';
@import './assets/styles/grid.scss';
@import './assets/styles/colour.scss';
@import './assets/styles/mixin.scss';
@import './assets/styles/material-styling.scss';
@import './assets/styles/default-classes.scss';


html, body { height: 100%; }
body { margin: 0;min-height: 100vh;overflow: hidden;}
/*=-=-=-=-=-=
General settings 
=-=-=-=-=-=*/
// .light,
// .dark{
//   height: 100%;
// }
hr{
  border-style: solid;
  border-width: 0.5px;
  border-color: transparentize($color: $magic_default_alternative, $amount: 0.7);
}
.create-button{
  position: absolute;
  right: 10px;
  top: 8px;
  z-index: 1;
}
/*
 * Misc classes.
 */
.warning {
  color: $magic_warning!important;
}
.error-bg{background-color: $magic_error!important;}
.error-text{color: $magic_error!important;}
.fill-width {
  width: 100%;
}

.button-strip {
  text-align: right;
  margin-top: .5rem;
  margin-bottom: .5rem;
  mat-checkbox, button {
    margin-left: 1rem;
  }
}
.sys-database {
  color: rgb(198, 198, 198);
  font-style: italic;
}



.CodeMirror-vscrollbar{
  @include scrollbar($magic_default_secondary,transparentize($color: $magic_dark_alternative, $amount: 0.65),6px);
}
.CodeMirror-hscrollbar{
  @include scrollbar_horizontal($magic_default_secondary,transparentize($color: $magic_dark_alternative, $amount: 0.65),6px);
}

// button.create-button {
//   position: absolute;
//   top: .5rem;
//   right: .5rem;
//   display: block;
// }

.invisible {
  display: none !important;
}

.word-break {
  word-break: break-word;
}

.button {
  cursor: pointer;
}

button.wider-button {
  width: 150px;
}

.mat-dialog-actions {
  float: right;
}

a {
  color: $magic_accent;
  text-decoration: none;
}

/*
 * Material table styles.
 */
table.clickable {
  width: 100%;
  // background-color: transparent;
  thead {
    tr {
      th {
        // color: transparentize($color: $magic_dark, $amount: 0.9);
        // font-weight: bold;
        white-space: nowrap;
        // padding-right: 1rem;
      }
    }
  }
  tbody {
    tr {
      td {
        vertical-align: middle;
        // padding: 1rem 1rem 1rem;
        padding: 0.5rem 1rem 0.5rem;
        cursor: pointer;
        user-select: none;
      }
    }
    td.mini-col {
      width: 5px;
      white-space: nowrap;
    }
    td.icon-col {
      width: 20px;
      height: 20px;
      padding-top: 3px;
      padding-bottom: 0;
      vertical-align: middle;
    }
    td.button-col {
      width: 30px;
      padding-top: 3px;
      padding-bottom: 0;
    }
    tr.selected {
      background-color: transparentize($color: $magic_default, $amount: 0.9);
    }
    tr.details {
      background-color: transparentize($color: $magic_default, $amount: 0.95);
      td {
        cursor: default;
        user-select: unset;
      }
      @keyframes fadeIn {
        0% {
          opacity: 0;
          margin-top: -50px;
        }
        100% {
          opacity: 1;
          margin-top: inherit;
        }
      }
      td>div {
        animation-name: fadeIn;
        animation-duration: .2s;
        animation-timing-function: ease-in;
        animation-fill-mode: forwards;
      }
    }
  }
}

/*
 * Generic close button style.
 */
.close {
  position: absolute !important;
  top: .5rem;
  right: .5rem;
}

.mat-dialog-title, .mat-dialog-content {
  input {
    color: $magic_dark;
  }
}

.CodeMirror {
  border-radius: 5px;
  height: 400px;
  resize: vertical;
}

// CodeMirror classes, specifically for autocomplete or hints plugin.
.CodeMirror-hints {
  position: absolute;
  z-index: 10000;
  overflow: hidden;
  list-style: none;
  margin: 0;
  padding: 2px;
  -webkit-box-shadow: 2px 3px 5px transparentize($color: $magic_dark, $amount: 0.8);
  -moz-box-shadow: 2px 3px 5px transparentize($color: $magic_dark, $amount: 0.8);
  box-shadow: 2px 3px 5px transparentize($color: $magic_dark, $amount: 0.8);
  border-radius: 3px;
  color: $magic_default;
  border: 1px solid $magic_dark;
  background-color: $magic_dark_alternative;
  font-size: 90%;
  font-family: monospace;
  max-height: 20em;
  overflow-y: auto;
}

.CodeMirror-hint {
  margin: 0;
  padding: 0 4px;
  border-radius: 2px;
  white-space: pre;
  cursor: pointer;
}

li.CodeMirror-hint-active {
  background: $magic_primary;
  // background: #08f;
  color: white;
}

.cm-error {
  background-color: $magic_error;
}


/*
 * Aista CodeMirror theme.
 */
.light {
  .cm-s-aista.CodeMirror { background: #e7e9db; color: #41323f; }
  .cm-s-aista div.CodeMirror-selected { background: #b9b6b0; }
  .cm-s-aista .CodeMirror-line::selection, .cm-s-aista .CodeMirror-line > span::selection, .cm-s-aista .CodeMirror-line > span > span::selection { background: #b9b6b0; }
  .cm-s-aista .CodeMirror-line::-moz-selection, .cm-s-aista .CodeMirror-line > span::-moz-selection, .cm-s-aista .CodeMirror-line > span > span::-moz-selection { background: #b9b6b0; }
  .cm-s-aista .CodeMirror-gutters { background: #e7e9db; border-right: 0px; }
  .cm-s-aista .CodeMirror-guttermarker { color: black; }
  .cm-s-aista .CodeMirror-guttermarker-subtle { color: #8d8687; }
  .cm-s-aista .CodeMirror-linenumber { color: #8d8687; }
  .cm-s-aista .CodeMirror-cursor { border-left: 1px solid #776e71; }
  
  .cm-s-aista span.cm-comment { color: #7c7377; }
  .cm-s-aista span.cm-atom { color: #815ba4; }
  .cm-s-aista span.cm-number { color: #815ba4; }
  
  .cm-s-aista span.cm-property, .cm-s-aista span.cm-attribute { color: #497963; }
  .cm-s-aista span.cm-keyword { color: #0b0d8a; }
  .cm-s-aista span.cm-string { color: #fec418; }
  
  .cm-s-aista span.cm-variable { color: #2b664c; }
  .cm-s-aista span.cm-variable-2 { color: #0a8fbb; }
  .cm-s-aista span.cm-def { color: #a87e43; }
  .cm-s-aista span.cm-bracket { color: #41323f; }
  .cm-s-aista span.cm-tag { color: #ef6155; }
  .cm-s-aista span.cm-link { color: #815ba4; }
  .cm-s-aista span.cm-error { background: #ef6155; color: #776e71; }
  
  .cm-s-aista .CodeMirror-activeline-background { background: #CFD1C4; }
  .cm-s-aista .CodeMirror-matchingbracket { text-decoration: underline; color: white !important; }
  }

.dark {
  .cm-s-aista.CodeMirror { background: #2c2c2c; color: #ffffec; }
  .cm-s-aista div.CodeMirror-selected { background: #716C62; }
  .cm-s-aista .CodeMirror-line::selection, .cm-s-aista .CodeMirror-line > span::selection, .cm-s-aista .CodeMirror-line > span > span::selection { background: rgba(113, 108, 98, .99); }
  .cm-s-aista .CodeMirror-line::-moz-selection, .cm-s-aista .CodeMirror-line > span::-moz-selection, .cm-s-aista .CodeMirror-line > span > span::-moz-selection { background: rgba(113, 108, 98, .99); }
  .cm-s-aista .CodeMirror-gutters { background: #4e4e4e; border-right: 0px; }
  .cm-s-aista .CodeMirror-guttermarker { color: white; }
  .cm-s-aista .CodeMirror-guttermarker-subtle { color: grey; }
  .cm-s-aista .CodeMirror-linenumber { color: #dadada; }
  .cm-s-aista .CodeMirror-cursor { border-left: 1px solid #ffffec; }

  .cm-s-aista span.cm-comment { color: #95958a; }
  .cm-s-aista span.cm-atom { color: #00a8c6; }
  .cm-s-aista span.cm-number { color: #00a8c6; }

  .cm-s-aista span.cm-property, .cm-s-aista span.cm-attribute { color: #9ddfe9; }
  .cm-s-aista span.cm-keyword { color: #ffb928; }
  .cm-s-aista span.cm-string { color: #ffcf6c; }
  .cm-s-aista span.cm-string.cm-property { color: #ffffec; }

  .cm-s-aista span.cm-variable { color: #ffffec; }
  .cm-s-aista span.cm-variable-2 { color: #00a8c6; }
  .cm-s-aista span.cm-def { color: #ffffec; }
  .cm-s-aista span.cm-bracket { color: #fffffc; font-weight: bold; }
  .cm-s-aista span.cm-tag { color: #9ddfe9; }
  .cm-s-aista span.cm-link { color: #f54b07; }
  .cm-s-aista span.cm-error { border-bottom: #636363; color: #ffffec; }
  .cm-s-aista span.cm-qualifier { color: #ffffec; }

  .cm-s-aista .CodeMirror-activeline-background { background: #494b41; }
  .cm-s-aista .CodeMirror-matchingbracket { color: #ffb928 !important; }
  .cm-s-aista .CodeMirror-matchingtag { background: rgba(255, 255, 255, .37); }
}
